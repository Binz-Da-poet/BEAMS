generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ===== USER MANAGEMENT =====
model User {
  id          Int      @id @default(autoincrement())
  username    String   @unique
  password    String
  email       String?  @unique
  phone       String?
  isActive    Boolean  @default(true)
  lastLoginAt DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  storeId     Int?
  store       Store?   @relation(fields: [storeId], references: [id])
  role        UserRole @default(STAFF)
  orders      Order[]
  orderLogs   OrderLog[]
  notifications Notification[]
  
  @@map("users")
}

enum UserRole {
  ADMIN
  STORE_MANAGER
  STORE_STAFF
  FACTORY_MANAGER
  FACTORY_STAFF
}

// ===== ORDER STATUS MANAGEMENT =====
model OrderStatus {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  code        String   @unique
  description String?
  isActive    Boolean  @default(true)
  sortOrder   Int      @default(0)
  color       String?  // For UI display
  
  // Relations
  orders      Order[]
  orderLogs   OrderLog[]
  
  @@map("order_statuses")
}

// ===== ORDER WORKFLOW TRACKING =====
model OrderLog {
  id          Int      @id @default(autoincrement())
  orderId     Int
  userId      Int
  statusId    Int
  action      String   // "CREATED", "UPDATED", "STATUS_CHANGED", "PDF_GENERATED"
  description String?
  oldValues   Json?    // Store previous values
  newValues   Json?    // Store new values
  createdAt   DateTime @default(now())
  
  // Relations
  order       Order      @relation(fields: [orderId], references: [id])
  user        User       @relation(fields: [userId], references: [id])
  status      OrderStatus @relation(fields: [statusId], references: [id])
  
  @@map("order_logs")
  @@index([orderId, createdAt])
  @@index([userId, createdAt])
  @@index([statusId, createdAt])
}

// ===== PDF DOCUMENT MANAGEMENT =====
model Document {
  id          Int      @id @default(autoincrement())
  orderId     Int
  type        DocumentType
  fileName    String
  filePath    String
  fileSize    Int?
  generatedAt DateTime @default(now())
  generatedBy Int      // User ID
  
  // Relations
  order       Order @relation(fields: [orderId], references: [id])
  
  @@map("documents")
  @@index([orderId])
  @@index([type])
}

enum DocumentType {
  FABRIC_ORDER_SHEET    // 生地発注書
  FACTORY_ORDER_SHEET   // 工場発注書
  CUSTOMER_ORDER_SHEET  // お客様注文書
  MEASUREMENT_SHEET     // 採寸表
}

// ===== NOTIFICATION SYSTEM =====
model Notification {
  id          Int      @id @default(autoincrement())
  userId      Int
  title       String
  message     String
  type        NotificationType
  isRead      Boolean  @default(false)
  data        Json?    // Additional data
  createdAt   DateTime @default(now())
  readAt      DateTime?
  
  // Relations
  user        User @relation(fields: [userId], references: [id])
  
  @@map("notifications")
  @@index([userId, isRead])
  @@index([createdAt])
}

enum NotificationType {
  ORDER_CREATED
  ORDER_UPDATED
  ORDER_STATUS_CHANGED
  PDF_GENERATED
  SYSTEM_ALERT
}

// ===== SYSTEM CONFIGURATION =====
model SystemConfig {
  id          Int      @id @default(autoincrement())
  key         String   @unique
  value       String
  description String?
  isActive    Boolean  @default(true)
  updatedAt   DateTime @updatedAt
  
  @@map("system_configs")
}

// ===== IMPROVED STORE MODEL =====
model Store {
  id          Int     @id @default(autoincrement())
  name        String
  code        String? @unique
  address     String?
  phone       String?
  email       String?
  
  // Thêm các field mới
  isActive    Boolean @default(true)
  region      String?
  managerName String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  orders      Order[]
  staff       Staff[]
  users       User[]
  
  @@map("stores")
}

// ===== IMPROVED CUSTOMER MODEL =====
model Customer {
  id          Int     @id @default(autoincrement())
  name        String
  kana        String?
  phone       String?
  email       String?
  note        String?
  
  // Thêm các field mới
  customerCode String? @unique
  birthDate    DateTime?
  address      String?
  isActive     Boolean @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  
  // Relations
  orders      Order[]
  
  @@map("customers")
}

// ===== IMPROVED ORDER MODEL =====
model Order {
  id                       Int           @id @default(autoincrement())
  storeId                  Int
  customerId               Int
  planId                   Int
  statusId                 Int           @default(1) // Default to first status
  receptionDate            DateTime
  expectedStoreArrivalDate DateTime?
  pickupMethodId           Int?
  salesPrice               Decimal?
  orderNo                  String?       @unique
  notes                    String?
  
  // Thêm các field mới
  priority                 OrderPriority @default(NORMAL)
  estimatedCompletionDate  DateTime?
  actualCompletionDate     DateTime?
  isUrgent                 Boolean       @default(false)
  internalNotes            String?       // Ghi chú nội bộ
  
  // Audit fields
  createdBy                Int
  updatedBy                Int?
  createdAt                DateTime      @default(now())
  updatedAt                DateTime      @updatedAt
  
  // Relations
  customer                 Customer      @relation(fields: [customerId], references: [id])
  pickupMethod             PickupMethod? @relation(fields: [pickupMethodId], references: [id])
  plan                     Plan          @relation(fields: [planId], references: [id])
  store                    Store         @relation(fields: [storeId], references: [id])
  status                   OrderStatus   @relation(fields: [statusId], references: [id])
  items                    OrderItem[]
  logs                     OrderLog[]
  documents                Document[]
  
  // Indexes for performance
  @@index([statusId])
  @@index([storeId])
  @@index([createdAt])
  @@index([orderNo])
  @@index([statusId, createdAt])
  @@index([storeId, statusId])
  @@index([customerId, createdAt])
}

enum OrderPriority {
  LOW
  NORMAL
  HIGH
  URGENT
}

// ===== EXISTING MODELS (KEEPING EXISTING STRUCTURE) =====
model Staff {
  id      Int         @id @default(autoincrement())
  storeId Int
  name    String
  email   String?
  phone   String?
  role    String?
  items   OrderItem[]
  store   Store       @relation(fields: [storeId], references: [id])
}

model Plan {
  id     Int     @id
  code   String  @unique
  name   String
  orders Order[]
}

model ItemType {
  id    Int         @id
  code  String      @unique
  name  String
  items OrderItem[]
}

model PickupMethod {
  id     Int     @id
  code   String  @unique
  name   String
  orders Order[]
}

model OrientationType {
  id                             Int             @id
  code                           String          @unique
  name                           String
  coatBodyLiningOrientations     CoatDetails[]   @relation("CoatBodyLiningOrientation")
  coatSleeveLiningOrientations   CoatDetails[]   @relation("CoatSleeveLiningOrientation")
  jacketBodyLiningOrientations   JacketDetails[] @relation("JacketBodyLiningOrientation")
  jacketSleeveLiningOrientations JacketDetails[] @relation("JacketSleeveLiningOrientation")
  suitBodyLiningOrientations     SuitDetails[]   @relation("SuitBodyLiningOrientation")
  suitSleeveLiningOrientations   SuitDetails[]   @relation("SuitSleeveLiningOrientation")
  vestBodyLiningOrientations     VestDetails[]   @relation("VestBodyLiningOrientation")
}

model OrderItem {
  id               Int            @id @default(autoincrement())
  orderId          Int
  itemTypeId       Int
  staffId          Int?
  quantity         Int            @default(1)
  unitPrice        Decimal?
  orderPeriodStart DateTime?
  orderPeriodEnd   DateTime?
  coatDetails      CoatDetails?
  jacketDetails    JacketDetails?
  itemType         ItemType       @relation(fields: [itemTypeId], references: [id])
  order            Order          @relation(fields: [orderId], references: [id])
  staff            Staff?         @relation(fields: [staffId], references: [id])
  pantsDetails     PantsDetails?
  suitDetails      SuitDetails?
  vestDetails      VestDetails?
  
  @@index([orderId])
  @@index([itemTypeId])
  @@index([staffId])
}

// ===== EXISTING DETAIL MODELS (KEEPING EXISTING STRUCTURE) =====
model JacketDetails {
  orderItemId               Int                      @id
  fabricId                  Int?
  fabricNo                  String?
  patternId                 Int?
  patternNo                 String?
  bodyLiningId              Int?
  bodyLiningNo              String?
  bodyLiningColorNo         String?
  bodyLiningOrientationId   Int?
  sleeveLiningId            Int?
  sleeveLiningNo            String?
  sleeveLiningColorNo       String?
  sleeveLiningOrientationId Int?
  liningSpec                String?
  buttonId                  Int?
  buttonNo                  String?
  buttonColorNo             String?
  optionsId                 Int?
  optionsText               String?
  cuffSpec                  String?
  cuffButtonCount           Int?
  cuffButtonStartPos        Decimal?
  sizeLabel                 String?
  bastedFitting             Boolean?
  remarks                   String?
  bodyLining                BodyLiningMaster?        @relation(fields: [bodyLiningId], references: [id])
  bodyLiningOrientation     OrientationType?         @relation("JacketBodyLiningOrientation", fields: [bodyLiningOrientationId], references: [id])
  button                    HeavyFabricButtonMaster? @relation(fields: [buttonId], references: [id])
  fabric                    HeavyFabricMaster?       @relation(fields: [fabricId], references: [id])
  options                   OptionMaster?            @relation(fields: [optionsId], references: [id])
  orderItem                 OrderItem                @relation(fields: [orderItemId], references: [id])
  pattern                   JacketPatternMaster?     @relation(fields: [patternId], references: [id])
  sleeveLining              SleeveLiningMaster?      @relation(fields: [sleeveLiningId], references: [id])
  sleeveLiningOrientation   OrientationType?         @relation("JacketSleeveLiningOrientation", fields: [sleeveLiningOrientationId], references: [id])
  measurements              JacketMeasurement[]
}

model JacketMeasurementType {
  id           Int                 @id @default(autoincrement())
  code         String              @unique
  name         String
  unit         String?
  measurements JacketMeasurement[]
}

model JacketMeasurement {
  id            Int                   @id @default(autoincrement())
  orderItemId   Int
  typeId        Int
  standardValue Decimal?
  adjustValue   Decimal?
  finalValue    Decimal?
  orderItem     JacketDetails         @relation(fields: [orderItemId], references: [orderItemId])
  type          JacketMeasurementType @relation(fields: [typeId], references: [id])

  @@unique([orderItemId, typeId])
}

model CoatDetails {
  orderItemId               Int                      @id
  seasonId                  Int?
  supplierId                Int?
  fabricId                  Int?
  fabricNo                  String?
  patternId                 Int?
  patternNo                 String?
  bodyLiningId              Int?
  bodyLiningNo              String?
  bodyLiningColorNo         String?
  bodyLiningOrientationId   Int?
  sleeveLiningId            Int?
  sleeveLiningNo            String?
  sleeveLiningColorNo       String?
  sleeveLiningOrientationId Int?
  liningSpec                String?
  buttonId                  Int?
  buttonNo                  String?
  buttonColorNo             String?
  optionsId                 Int?
  optionsText               String?
  cuffSpec                  String?
  cuffButtonCount           Int?
  cuffButtonStartPos        Decimal?
  sizeLabel                 String?
  bastedFitting             Boolean?
  remarks                   String?
  bodyLining                BodyLiningMaster?        @relation(fields: [bodyLiningId], references: [id])
  bodyLiningOrientation     OrientationType?         @relation("CoatBodyLiningOrientation", fields: [bodyLiningOrientationId], references: [id])
  button                    HeavyFabricButtonMaster? @relation(fields: [buttonId], references: [id])
  fabric                    HeavyFabricMaster?       @relation(fields: [fabricId], references: [id])
  options                   OptionMaster?            @relation(fields: [optionsId], references: [id])
  orderItem                 OrderItem                @relation(fields: [orderItemId], references: [id])
  pattern                   CoatPatternMaster?       @relation(fields: [patternId], references: [id])
  season                    Season?                  @relation(fields: [seasonId], references: [id])
  sleeveLining              SleeveLiningMaster?      @relation(fields: [sleeveLiningId], references: [id])
  sleeveLiningOrientation   OrientationType?         @relation("CoatSleeveLiningOrientation", fields: [sleeveLiningOrientationId], references: [id])
  supplier                  Supplier?                @relation(fields: [supplierId], references: [id])
  measurements              CoatMeasurement[]
}

model Season {
  id           Int            @id @default(autoincrement())
  code         String         @unique
  name         String
  coatDetails  CoatDetails[]
  pantsDetails PantsDetails[]
  suitDetails  SuitDetails[]
  vestDetails  VestDetails[]
}

model Supplier {
  id                 Int                 @id @default(autoincrement())
  code               String?
  name               String
  contactEmail       String?
  contactPhone       String?
  note               String?
  coatDetails        CoatDetails[]
  heavyFabricMasters HeavyFabricMaster[]
  pantsDetails       PantsDetails[]
  suitDetails        SuitDetails[]
  vestDetails        VestDetails[]
}

model HeavyFabricMaster {
  id                     Int             @id @default(autoincrement())
  supplierNo             String?
  fabricMaker            String?
  fabricNo               String          @unique
  color                  String?
  pattern                String?
  composition            String?
  characteristics        String?
  fairFabricUnitPrice    Decimal?
  fairFabricRank         String?
  regularFabricUnitPrice Decimal?
  regularFabricRank      String?
  dataUpdated            DateTime?
  largePattern           Boolean?
  transparent            Boolean?
  stockFlag              Boolean?
  supplierId             Int?
  coatDetails            CoatDetails[]
  supplier               Supplier?       @relation(fields: [supplierId], references: [id])
  jacketDetails          JacketDetails[]
  pantsDetails           PantsDetails[]
  suitDetails            SuitDetails[]
  vestDetails            VestDetails[]
}

model JacketPatternMaster {
  id                 Int             @id @default(autoincrement())
  patternNo          String          @unique
  size               String?
  length             Decimal?
  shoulderWidth      Decimal?
  bust               Decimal?
  waist              Decimal?
  hip                Decimal?
  sleeveLength       Decimal?
  sleeveWidth        Decimal?
  lapelWidth         Decimal?
  stitchSpec         String?
  liningSpec         String?
  defaultButtonCount Int?
  jacketDetails      JacketDetails[]
}

model SuitPatternMaster {
  id                 Int           @id @default(autoincrement())
  patternNo          String        @unique
  size               String?
  length             Decimal?
  shoulderWidth      Decimal?
  bust               Decimal?
  waist              Decimal?
  hip                Decimal?
  sleeveLength       Decimal?
  sleeveWidth        Decimal?
  lapelWidth         Decimal?
  stitchSpec         String?
  defaultButtonCount Int?
  suitDetails        SuitDetails[]
}

model VestPatternMaster {
  id                 Int           @id @default(autoincrement())
  patternNo          String        @unique
  size               String?
  length             Decimal?
  shoulderWidth      Decimal?
  bust               Decimal?
  waist              Decimal?
  stitchSpec         String?
  defaultButtonCount Int?
  vestDetails        VestDetails[]
}

model CoatPatternMaster {
  id            Int           @id @default(autoincrement())
  patternNo     String        @unique
  size          String?
  length        Decimal?
  shoulderWidth Decimal?
  bust          Decimal?
  waist         Decimal?
  hip           Decimal?
  sleeveLength  Decimal?
  sleeveWidth   Decimal?
  lapelWidth    Decimal?
  stitchSpec    String?
  coatDetails   CoatDetails[]
}

model PantsPatternMaster {
  id           Int            @id @default(autoincrement())
  patternNo    String         @unique
  size         String?
  waist        Decimal?
  hip          Decimal?
  crotchWidth  Decimal?
  kneeWidth    Decimal?
  hemWidth     Decimal?
  rise         Decimal?
  inseam       Decimal?
  stitchSpec   String?
  pantsDetails PantsDetails[]
  suitDetails  SuitDetails[]
}

model BodyLiningMaster {
  id            Int             @id @default(autoincrement())
  productNo     String          @unique
  colorNo       String?
  orientation   String?
  stockFlag     Boolean?
  coatDetails   CoatDetails[]
  jacketDetails JacketDetails[]
  suitDetails   SuitDetails[]
  vestDetails   VestDetails[]
}

model SleeveLiningMaster {
  id            Int             @id @default(autoincrement())
  productNo     String          @unique
  colorNo       String?
  orientation   String?
  stockFlag     Boolean?
  coatDetails   CoatDetails[]
  jacketDetails JacketDetails[]
  suitDetails   SuitDetails[]
}

model HeavyFabricButtonMaster {
  id                Int             @id @default(autoincrement())
  productNo         String
  colorNo           String?
  pantsProductNo    String?
  pantsColorNo      String?
  cost1             Decimal?
  cost2             Decimal?
  cost3             Decimal?
  cost4             Decimal?
  cost5             Decimal?
  cost6             Decimal?
  cost7             Decimal?
  cost8             Decimal?
  retailPrice1      Decimal?
  retailPrice2      Decimal?
  retailPrice3      Decimal?
  retailPrice4      Decimal?
  retailPrice5      Decimal?
  retailPrice6      Decimal?
  retailPrice7      Decimal?
  retailPrice8      Decimal?
  coatDetails       CoatDetails[]
  jacketDetails     JacketDetails[]
  pantsDetails      PantsDetails[]
  suitJacketDetails SuitDetails[]   @relation("SuitJacketButton")
  suitPantsDetails  SuitDetails[]   @relation("SuitPantsButton")
  vestDetails       VestDetails[]
}

model OptionMaster {
  id            Int             @id @default(autoincrement())
  optionName    String
  cost          Decimal?
  retailPrice   Decimal?
  textContent   String?
  coatDetails   CoatDetails[]
  jacketDetails JacketDetails[]
  pantsDetails  PantsDetails[]
  suitDetails   SuitDetails[]
  vestDetails   VestDetails[]
}

model CoatMeasurementType {
  id           Int               @id @default(autoincrement())
  code         String            @unique
  name         String
  unit         String?
  measurements CoatMeasurement[]
}

model CoatMeasurement {
  id            Int                 @id @default(autoincrement())
  orderItemId   Int
  typeId        Int
  standardValue Decimal?
  adjustValue   Decimal?
  finalValue    Decimal?
  orderItem     CoatDetails         @relation(fields: [orderItemId], references: [orderItemId])
  type          CoatMeasurementType @relation(fields: [typeId], references: [id])

  @@unique([orderItemId, typeId])
}

model SuitDetails {
  orderItemId               Int                      @id
  seasonId                  Int?
  supplierId                Int?
  fabricId                  Int?
  fabricNo                  String?
  jacketPatternId           Int?
  jacketPatternNo           String?
  pantsPatternId            Int?
  pantsPatternNo            String?
  bodyLiningId              Int?
  bodyLiningNo              String?
  bodyLiningColorNo         String?
  bodyLiningOrientationId   Int?
  sleeveLiningId            Int?
  sleeveLiningNo            String?
  sleeveLiningColorNo       String?
  sleeveLiningOrientationId Int?
  liningSpec                String?
  jacketButtonId            Int?
  jacketButtonNo            String?
  jacketButtonColorNo       String?
  pantsButtonId             Int?
  pantsButtonNo             String?
  pantsButtonColorNo        String?
  optionsId                 Int?
  cuffSpec                  String?
  cuffButtonCount           Int?
  cuffButtonStartPos        Decimal?
  jacketSizeLabel           String?
  pantsSizeLabel            String?
  pantsHemSpec              String?
  pantsDoubleWidth          Decimal?
  bastedFitting             Boolean?
  remarks                   String?
  bodyLining                BodyLiningMaster?        @relation(fields: [bodyLiningId], references: [id])
  bodyLiningOrientation     OrientationType?         @relation("SuitBodyLiningOrientation", fields: [bodyLiningOrientationId], references: [id])
  fabric                    HeavyFabricMaster?       @relation(fields: [fabricId], references: [id])
  jacketButton              HeavyFabricButtonMaster? @relation("SuitJacketButton", fields: [jacketButtonId], references: [id])
  jacketPattern             SuitPatternMaster?       @relation(fields: [jacketPatternId], references: [id])
  options                   OptionMaster?            @relation(fields: [optionsId], references: [id])
  orderItem                 OrderItem                @relation(fields: [orderItemId], references: [id])
  pantsButton               HeavyFabricButtonMaster? @relation("SuitPantsButton", fields: [pantsButtonId], references: [id])
  pantsPattern              PantsPatternMaster?      @relation(fields: [pantsPatternId], references: [id])
  season                    Season?                  @relation(fields: [seasonId], references: [id])
  sleeveLining              SleeveLiningMaster?      @relation(fields: [sleeveLiningId], references: [id])
  sleeveLiningOrientation   OrientationType?         @relation("SuitSleeveLiningOrientation", fields: [sleeveLiningOrientationId], references: [id])
  supplier                  Supplier?                @relation(fields: [supplierId], references: [id])
  jacketMeasurements        SuitJacketMeasurement[]
  pantsMeasurements         SuitPantsMeasurement[]
}

model SuitJacketMeasurementType {
  id           Int                     @id @default(autoincrement())
  code         String                  @unique
  name         String
  unit         String?
  measurements SuitJacketMeasurement[]
}

model SuitJacketMeasurement {
  id            Int                       @id @default(autoincrement())
  orderItemId   Int
  typeId        Int
  standardValue Decimal?
  adjustValue   Decimal?
  finalValue    Decimal?
  orderItem     SuitDetails               @relation(fields: [orderItemId], references: [orderItemId])
  type          SuitJacketMeasurementType @relation(fields: [typeId], references: [id])

  @@unique([orderItemId, typeId])
}

model SuitPantsMeasurementType {
  id           Int                    @id @default(autoincrement())
  code         String                 @unique
  name         String
  unit         String?
  measurements SuitPantsMeasurement[]
}

model SuitPantsMeasurement {
  id            Int                      @id @default(autoincrement())
  orderItemId   Int
  typeId        Int
  standardValue Decimal?
  adjustValue   Decimal?
  finalValue    Decimal?
  orderItem     SuitDetails              @relation(fields: [orderItemId], references: [orderItemId])
  type          SuitPantsMeasurementType @relation(fields: [typeId], references: [id])

  @@unique([orderItemId, typeId])
}

model PantsDetails {
  orderItemId        Int                      @id
  seasonId           Int?
  supplierId         Int?
  fabricId           Int?
  fabricNo           String?
  patternId          Int?
  pantsPatternNo     String?
  liningSpec         String?
  buttonId           Int?
  pantsButtonNo      String?
  pantsButtonColorNo String?
  optionsId          Int?
  pantsSizeLabel     String?
  pantsHemSpec       String?
  pantsDoubleWidth   Decimal?
  bastedFitting      Boolean?
  remarks            String?
  button             HeavyFabricButtonMaster? @relation(fields: [buttonId], references: [id])
  fabric             HeavyFabricMaster?       @relation(fields: [fabricId], references: [id])
  options            OptionMaster?            @relation(fields: [optionsId], references: [id])
  orderItem          OrderItem                @relation(fields: [orderItemId], references: [id])
  pattern            PantsPatternMaster?      @relation(fields: [patternId], references: [id])
  season             Season?                  @relation(fields: [seasonId], references: [id])
  supplier           Supplier?                @relation(fields: [supplierId], references: [id])
  measurements       PantsMeasurement[]
}

model PantsMeasurementType {
  id           Int                @id @default(autoincrement())
  code         String             @unique
  name         String
  unit         String?
  measurements PantsMeasurement[]
}

model PantsMeasurement {
  id            Int                  @id @default(autoincrement())
  orderItemId   Int
  typeId        Int
  standardValue Decimal?
  adjustValue   Decimal?
  finalValue    Decimal?
  orderItem     PantsDetails         @relation(fields: [orderItemId], references: [orderItemId])
  type          PantsMeasurementType @relation(fields: [typeId], references: [id])

  @@unique([orderItemId, typeId])
}

model VestDetails {
  orderItemId             Int                      @id
  seasonId                Int?
  supplierId              Int?
  fabricId                Int?
  fabricNo                String?
  patternId               Int?
  patternNo               String?
  bodyLiningId            Int?
  bodyLiningNo            String?
  bodyLiningColorNo       String?
  bodyLiningOrientationId Int?
  liningSpec              String?
  buttonId                Int?
  buttonNo                String?
  buttonColorNo           String?
  optionsId               Int?
  sizeLabel               String?
  bastedFitting           Boolean?
  remarks                 String?
  bodyLining              BodyLiningMaster?        @relation(fields: [bodyLiningId], references: [id])
  bodyLiningOrientation   OrientationType?         @relation("VestBodyLiningOrientation", fields: [bodyLiningOrientationId], references: [id])
  button                  HeavyFabricButtonMaster? @relation(fields: [buttonId], references: [id])
  fabric                  HeavyFabricMaster?       @relation(fields: [fabricId], references: [id])
  options                 OptionMaster?            @relation(fields: [optionsId], references: [id])
  orderItem               OrderItem                @relation(fields: [orderItemId], references: [id])
  pattern                 VestPatternMaster?       @relation(fields: [patternId], references: [id])
  season                  Season?                  @relation(fields: [seasonId], references: [id])
  supplier                Supplier?                @relation(fields: [supplierId], references: [id])
  measurements            VestMeasurement[]
}

model VestMeasurementType {
  id           Int               @id @default(autoincrement())
  code         String            @unique
  name         String
  unit         String?
  measurements VestMeasurement[]
}

model VestMeasurement {
  id            Int                 @id @default(autoincrement())
  orderItemId   Int
  typeId        Int
  standardValue Decimal?
  adjustValue   Decimal?
  finalValue    Decimal?
  orderItem     VestDetails         @relation(fields: [orderItemId], references: [orderItemId])
  type          VestMeasurementType @relation(fields: [typeId], references: [id])

  @@unique([orderItemId, typeId])
}
